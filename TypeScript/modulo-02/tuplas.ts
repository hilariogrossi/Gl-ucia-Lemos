// Exemplo 01 - Uso simples de Tuplas em TypeScript
let pessoa_1: [string, string, number];
pessoa_1 = ['Hil√°rio Grossi de Oliveira', 'Cientista de Dados', 54];
console.log(pessoa_1);
console.log();

// Exemplo 02 - Acesssando o valor da Tuplas em TypeScript
let pessoa_2: [string, string, number];
pessoa_2 = ['Hil√°rio Grossi de Oliveira', 'Cientista de Dados', 54];
console.log(`A idade da pessoa ${pessoa_2[0]} √© ${pessoa_2[2]}.`);
console.log();

// Exemplo 03 - Outra forma de usar Tuplas em TypeScript (com labels)
let pessoa_3: [Nome: string, Posi√ß√£o: string, Idade: number] = ['Hil√°rio Grossi de Oliveira', 'Cientista de Dados', 54];
console.log(`A idade da pessoa ${pessoa_3[0]} √© ${pessoa_3[2]}.`);
console.log();

// Exemplo 04 - Usando Tuplas com Sread Operator em TypeScript
let listaFrutas: [string, ...string[]] = ['üçç', 'üçä', 'üçé', 'üçâ', 'üçì'];
console.log(...listaFrutas);
console.log();

// Exemplo 05 - Lista heterog√™nia de Tuplas em TypeScript
let listaFrutas_2: [number, boolean, ...string[]] = [5, true, ...listaFrutas];
console.log(listaFrutas_2);
console.log();

// Exemplo 06 - Uso de fun√ß√£o com Tuplas em TypeScript
function listarPessoas (Nomes: string[], Idade: number[]) {
    return [...Nomes, ...Idade]
    
}

let resultado = listarPessoas(['Hil√°rio', 'Patr√≠cia'], [53, 56]);
console.log(resultado);
console.log();

// Exemplo 07 - Labeled Tuples com Spread Operator numa fun√ß√£o em TypeScript

type Nome = 
    | [primeiroNome: string, sobrenome: string]
    | [primeiroNome: string, nomeMeio: string, sobrenome: string]

function criarPessoa (...nome: Nome) {
    return [...nome]

}

console.log(criarPessoa('Hil√°rio', 'Grossi de', 'Oliveira'));
console.log(criarPessoa('Hil√°rio', 'Oliveira'));
console.log();
